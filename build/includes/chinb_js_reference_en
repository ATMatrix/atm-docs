<h1 id='chinb-js'>chinb.js 参考</h1><h2 id='install'>Install</h2>
<p>This is a Node.js module available through the npm registry.</p>

<p>Before installing, download and install Node.js. </p>

<p>Installation is done using the npm install command:</p>

<p><code>$ npm install chinb</code></p>
<h2 id='introduction'>Introduction</h2>
<p>chinb.js is a collection of libraries which allow you to interact with a Chinb node, using a HTTP or IPC connection.</p>

<p>Here is an example on how to use it:</p>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">Chinb</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'chinb'</span><span class="p">);</span>
<span class="kd">let</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">institue_private_key</span><span class="p">:</span> <span class="s2">"XXXXXX"</span><span class="p">,</span>
  <span class="na">validator_private_key</span><span class="p">:</span> <span class="s2">"XXXXX"</span>
<span class="p">}</span>
<span class="kr">const</span> <span class="nx">chinb</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Chinb</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span>
<span class="nx">chinb</span><span class="p">.</span><span class="nx">accounts</span><span class="p">.</span><span class="nx">create</span><span class="p">()</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">){</span>
    <span class="p">...</span>
<span class="p">})</span>
<span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">error</span><span class="p">){</span>
    <span class="p">...</span>
<span class="p">});</span>
</code></pre>
<aside class="success">
Node.js 0.8 or higher is required.
</aside>
<h2 id='chinb'>chinb</h2>
<p>The chinb.js object is an umbrella package to house all Chinb related modules.</p>
<pre class="highlight plaintext"><code>const Chinb = require('chinb');
const chinb = new Chinb(options);

&gt; chinb.accounts
&gt; chinb.institue
&gt; chinb.validator
&gt; chinb.utils
&gt; chinb.version
</code></pre><h2 id='chinb-accounts'>chinb.accounts</h2>
<p>The <code>chinb.accounts</code> contains functions to generate Chinb accounts and authorize data.</p>
<h2 id='chinb-accounts-create'>chinb.accounts.create</h2>
<p><code>chinb.accounts.create(id, password)</code></p>

<p>Generate an account object with private key and public key.</p>
<pre class="highlight javascript tab-javascript"><code><span class="nx">chinb</span><span class="p">.</span><span class="nx">accounts</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="s2">"111111111111111"</span><span class="p">,</span> <span class="s1">'test'</span><span class="p">)</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">key</span><span class="p">)</span>
<span class="p">})</span>
<span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">error</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
<span class="p">});</span>
</code></pre>
<blockquote>
<p>returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"987654321000000000"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0xb8CE9ab6943e0eCED004cDe8e3bBed6568B2Fa01"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"keystore"</span><span class="p">:</span><span class="w"> </span><span class="s2">"{
        version: 3,
        id: '04e9bcbb-96fa-497b-94d1-14df4cd20af6',
        address: '2c7536e3605d9c16a7a3d7b1898e529396a65c23',
        crypto: {
            ciphertext: 'a1c25da3ecde4e6a24f3697251dd15d6208520efc84ad97397e906e6df24d251',
            cipherparams: { iv: '2885df2b63f7ef247d753c82fa20038a' },
            cipher: 'aes-128-ctr',
            kdf: 'scrypt',
            kdfparams: {
                dklen: 32,
                salt: '4531b3c174cc3ff32a6a7a85d6761b410db674807b2d216d022318ceee50be10',
                n: 262144,
                r: 8,
                p: 1
            },
            mac: 'b8b010fff37f9ae5559a352a185e86f9b9c1d7f7a9f1bd4e82a5dd35468fc7f6'
        }
    }"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<aside class="warning">
Be sure to store the private keys on the client only!
</aside>
<h3 id='parameters'>Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>id</td>
<td>null</td>
<td>user ID</td>
</tr>
<tr>
<td>password</td>
<td>null</td>
<td>Password used to encrypt generated private key before storing on client&#39;s device</td>
</tr>
</tbody></table>
<h2 id='chinb-accounts-getbalance'>chinb.accounts.getBalance</h2>
<p><code>chinb.accounts.getBalance(address [, defaultBlock])</code></p>

<p>Get the balance of an address at a given block.</p>
<pre class="highlight javascript tab-javascript"><code><span class="nx">chinb</span><span class="p">.</span><span class="nx">accounts</span><span class="p">.</span><span class="nx">getBalance</span><span class="p">(</span><span class="s2">"0x407d73d8a49eeb85d32cf465507dd71d507100c1"</span><span class="p">)</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">)</span>
</code></pre>
<blockquote>
<p>The current balance for the given address</p>
</blockquote>
<pre class="highlight plaintext"><code>"1000000000000"
</code></pre><h3 id='parameters-2'>Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>address</td>
<td>null</td>
<td>user public key</td>
</tr>
<tr>
<td>defaultBlock</td>
<td>&quot;latest&quot;</td>
<td>If you pass this parameter it will not use the default block set with defaultBlock.</td>
</tr>
</tbody></table>
<h2 id='chinb-accounts-transfer'>chinb.accounts.transfer</h2>
<p><code>chinb.accounts.transfer(from, to, tokens)</code></p>

<p>Send <code>tokens</code> amount of tokens from address <code>from</code> to address <code>to</code>.</p>
<pre class="highlight javascript tab-javascript"><code><span class="nx">chinb</span><span class="p">.</span><span class="nx">accounts</span><span class="p">.</span><span class="nx">transfer</span><span class="p">(</span><span class="s2">"0x1111111111111111111111111111111111111111"</span><span class="p">,</span> <span class="s2">"0x2222222222222222222222222222222222222222"</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">)</span>
</code></pre>
<blockquote>
<p>returns <code>receipt</code> like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="s2">"transactionHash"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0x9fc76417374aa880d4449a1f7f31ec597f00b1f6f3dd2d66f4c9c6c445836d8b"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"transactionIndex"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
  </span><span class="s2">"blockHash"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0xef95f2f1ed3ca60b048b4bf67cde2195961e0bba6f70bcbea9a2c4e133e34b46"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"blockNumber"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
  </span><span class="s2">"contractAddress"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"cumulativeGasUsed"</span><span class="p">:</span><span class="w"> </span><span class="mi">314159</span><span class="p">,</span><span class="w">
  </span><span class="s2">"gasUsed"</span><span class="p">:</span><span class="w"> </span><span class="mi">30234</span><span class="p">,</span><span class="w">
  </span><span class="s2">"logs"</span><span class="p">:</span><span class="w"> </span><span class="p">[{</span><span class="w">
         </span><span class="err">//</span><span class="w"> </span><span class="err">logs</span><span class="w"> </span><span class="err">as</span><span class="w"> </span><span class="err">returned</span><span class="w"> </span><span class="err">by</span><span class="w"> </span><span class="err">getPastLogs</span><span class="p">,</span><span class="w"> </span><span class="err">etc.</span><span class="w">
     </span><span class="p">},</span><span class="w"> </span><span class="err">...</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre><h3 id='parameters-3'>Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>from</td>
<td>null</td>
<td>from address</td>
</tr>
<tr>
<td>to</td>
<td>null</td>
<td>to address</td>
</tr>
<tr>
<td>tokens</td>
<td>null</td>
<td>amount of tokens</td>
</tr>
</tbody></table>
<h2 id='chinb-accounts-authorize'>chinb.accounts.authorize</h2>
<p><code>chinb.accounts.authorize(address, password, msg)</code></p>

<p>Signs arbitrary data. This data is before UTF-8 HEX decoded and enveloped as follows: &quot;\x19Chinb Signed Message:\n&quot; + message.length + message.</p>
<pre class="highlight javascript tab-javascript"><code><span class="nx">chinb</span><span class="p">.</span><span class="nx">accounts</span><span class="p">.</span><span class="nx">authorize</span><span class="p">(</span><span class="s2">"0x407d73d8a49eeb85d32cf465507dd71d507100c1"</span><span class="p">,</span> <span class="s2">"test"</span><span class="p">,</span> <span class="s2">"Some data"</span><span class="p">)</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">)</span>
</code></pre>
<blockquote>
<p>returns <code>sign</code> like this:</p>
</blockquote>
<pre class="highlight plaintext"><code>{
    message: 'Some data',
    messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',
    v: '0x1c',
    r: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd',
    s: '0x6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a029',
    signature: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a0291c'
}
</code></pre><h3 id='parameters-4'>Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>from</td>
<td>null</td>
<td>from address</td>
</tr>
<tr>
<td>password</td>
<td>null</td>
<td>user password</td>
</tr>
<tr>
<td>msg</td>
<td>null</td>
<td>the given data</td>
</tr>
</tbody></table>
<h2 id='chinb-institue'>chinb.institue</h2>
<p>The <code>chinb.institue</code> contains functions to validate sign and recover account.</p>
<h2 id='chinb-institue-validate'>chinb.institue.validate</h2>
<p><code>chinb.institue.validate(address, sign, msg)</code></p>

<p>Validate the sign of the address</p>
<pre class="highlight javascript tab-javascript"><code><span class="nx">chinb</span><span class="p">.</span><span class="nx">institue</span><span class="p">.</span><span class="nx">validate</span><span class="p">(</span><span class="s2">"0x407d73d8a49eeb85d32cf465507dd71d507100c1"</span><span class="p">,</span> <span class="s2">"0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a0291c"</span><span class="p">)</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">)</span>
</code></pre>
<blockquote>
<p>returns <code>result</code> like this:</p>
</blockquote>
<pre class="highlight plaintext"><code>true
</code></pre><h3 id='parameters-5'>Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>address</td>
<td>null</td>
<td>the address of sign</td>
</tr>
<tr>
<td>sign</td>
<td>null</td>
<td>the signature of authorizing data</td>
</tr>
<tr>
<td>msg</td>
<td>null</td>
<td>the data of sign</td>
</tr>
</tbody></table>
<h2 id='chinb-institue-recover'>chinb.institue.recover</h2><pre class="highlight plaintext"><code>
Recover account

```javascript
chinb.institue.recover("0x407d73d8a49eeb85d32cf465507dd71d507100c1")
.then(console.log)
</code></pre>
<blockquote>
<p>returns <code>result</code> like this:</p>
</blockquote>
<pre class="highlight plaintext"><code>true
</code></pre><h3 id='parameters-6'>Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>address</td>
<td>null</td>
<td>recorver user public key</td>
</tr>
</tbody></table>
